#!/bin/bash

# setting webots in the system path
export WEBOTS_HOME="/Applications/Webots.app/Contents"
export PYTHONPATH="$WEBOTS_HOME/lib/controller/python"
export LD_LIBRARY_PATH="$WEBOTS_HOME/lib/controller"  # Required for dynamic libraries
export DYLD_LIBRARY_PATH="$WEBOTS_HOME/lib/controller"  # Required on macOS

# this path is for a single user, should try with systemwide install and then check with that
WEBOTS_DIR="/Applications/Webots.app/Contents/MacOS" # Path to the main Webots executable

# Get the absolute path to the script
SCRIPT_PATH=$(perl -MCwd -e 'print Cwd::abs_path shift' "$0")
SCRIPT_DIR=$(dirname "$SCRIPT_PATH")

echo "script dir: $SCRIPT_DIR"

if [ -x "$WEBOTS_DIR" ]; then
    cd ~
    DIRECTORY="iti0201-2025"

    if [ "$#" -lt 3 ]; then
        echo "USAGE: robot_test [uni-id] [exercise_number] [map_number]"
        echo "You can add git branch name with -b=[branch]"
        echo "You can add teammate uni-id (if code is in that student's repository) -t=[teammate_uniid]"
        echo "You can add team repository with -r=[repo_name]"
        echo "You can use your SSH key if you specify --key"
        echo "You can use --lite to load the downscaled map version, when facing performance issues"
        echo "You can also add optional argument --realistic"
        exit 0
    fi

    git_user_name=$1
    exercise_number=$2
    map_number=$3

    ir_noise=0
    waiting_time=12
    yaw_start=0
    realistic=0
    branch=main
    key=0
    lite=0
    team=
    repo=$DIRECTORY

    for i in "$@"; do
        case $i in
            -t=*|--team=*)
            team="${i#*=}"
            shift
            ;;
            -r=*|--repo=*)
            repo="${i#*=}"
            shift
            ;;
            -b=*|--branch=*)
            branch="${i#*=}"
            shift
            ;;
            --key)
            key=1
            shift
            ;;
    	    --lite)
	    lite=1
	    shift
	    ;;
            --realistic)
            realistic=1
            shift
            ;;
        esac
    done

    if [[ ! -z "$team" ]]; then
        git_address="https://$git_user_name@gitlab.cs.taltech.ee/$team/$repo.git"
        [[ "$key" -eq 1 ]] && git_address="git@gitlab.cs.taltech.ee:$team/$repo.git"
    else
        git_address="https://$git_user_name@gitlab.cs.taltech.ee/$git_user_name/$repo.git"
        [[ "$key" -eq 1 ]] && git_address="git@gitlab.cs.taltech.ee:$git_user_name/$repo.git"
    fi
    map_file=${map_number}
    if [[ "$lite" -eq 1 ]]; then
	map_file="${map_number}_lite"
    fi

    echo $git_address

    if [ -d "$DIRECTORY" ]; then
        echo "Repository already exists. Updating.."
        cd $DIRECTORY
        git pull origin $branch
        git checkout $branch
    else
        echo "Repository doesn't exist yet. Creating one now..."
        git clone -b $branch $git_address $DIRECTORY
        cd $DIRECTORY
    fi

    if [ -d "$exercise_number" ]; then
        cd $exercise_number
    else
        echo "Your files do not contain the $exercise_number directory."
        exit 1
    fi

    if ! [ -f "robot.py" ]; then
        echo "Your directory $exercise_number does not contain the necessary robot.py file."
        exit 1
    fi

    echo "realistic: $realistic"

    # Updated path for controller directory with permissions
    CONTROLLERS_DIR="$SCRIPT_DIR/../../controllers"
    mkdir -p "$CONTROLLERS_DIR"
    
    echo "Symlinking your solution to controller directory..."
    rm -f "$CONTROLLERS_DIR/robot.py"
    ln -s ~/"$DIRECTORY/$exercise_number/robot.py" "$CONTROLLERS_DIR"

    if pgrep -x "webots" > /dev/null; then
        echo "Webots is running!"
    else
        echo "Webots is not running, starting Webots..."
        open -a "$WEBOTS_DIR/webots" --args "$SCRIPT_DIR/../../worlds/$exercise_number/${map_file}.wbt" &
    fi

    WEBOTS_HOME="$HOME/Applications/Webots.app" "$WEBOTS_DIR/webots-controller" --stdout-redirect --stderr-redirect "$CONTROLLERS_DIR/tb4.py"
else
    echo "Webots installation directory not found at $WEBOTS_DIR. Please specify the correct installation directory!"
fi
